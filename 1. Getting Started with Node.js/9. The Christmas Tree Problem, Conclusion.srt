1
00:00:01,000 --> 00:00:05,000
Now that we've learned how to write code using anonymous call-backs,

2
00:00:05,000 --> 00:00:08,000
we should also be careful not to overdo it.

3
00:00:08,000 --> 00:00:11,000
Selecting the right combination of approaches can be crucial

4
00:00:11,000 --> 00:00:15,000
in structuring your "Node.js" application.

5
00:00:15,000 --> 00:00:20,000
Anonymous functions are very common and very useful, but many novice "Node" developers,

6
00:00:20,000 --> 00:00:26,000
who rely on them exclusively, find themselves frustrated with the Christmas tree problem.

7
00:00:26,000 --> 00:00:30,000
Code like this can be difficult to debug and maintain.

8
00:00:30,000 --> 00:00:35,000
This is often cited as a shortcoming of Node's programming model.

9
00:00:35,000 --> 00:00:41,000
However, the smart use of named functions, as well as modules, event emitters and streams,

10
00:00:41,000 --> 00:00:46,000
all of which we'll cover in subsequent videos, will give you the tools you need to write

11
00:00:46,000 --> 00:00:50,000
"Node" applications that are no more difficult to build and maintain than those

12
00:00:50,000 --> 00:00:53,000
of any other server-side programming language.

13
00:00:53,000 --> 00:00:57,000
And besides, they're much more fun.

14
00:00:57,000 --> 00:01:01,000
So to conclude, in this module, we began with a brief introduction

15
00:01:01,000 --> 00:01:05,000
to the origins of "Node" and its underpinnings.

16
00:01:05,000 --> 00:01:10,000
We next installed "Node" in a "Linux" environment using "NVM".

17
00:01:10,000 --> 00:01:13,000
After that, we took a brief lap

18
00:01:13,000 --> 00:01:18,000
around the features offered by the "Cloud9" web-based "IDE".

19
00:01:18,000 --> 00:01:25,000
Diving into the fundamentals, we then discussed Node's event loop and non-blocking IO.

20
00:01:25,000 --> 00:01:30,000
We finished with a discussion of using call-backs to write asynchronous code.

21
00:01:30,000 --> 00:01:35,000
I hope this module has been a useful introduction to "Node.js".

22
00:01:35,000 --> 00:01:37,000
I encourage you to stick around as we dig deeper

23
00:01:37,000 --> 00:01:40,000
into this exciting server-side programming framework.

24
00:01:40,000 --> 00:59:00,000
Thank you.

